// Generated by data binding compiler. Do not edit!
package com.findajob.jobamax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.findajob.jobamax.R;
import com.findajob.jobamax.model.JobSeeker;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentSeekerExperienceListBinding extends ViewDataBinding {
  @NonNull
  public final Button btnAddExperience;

  @NonNull
  public final Button btnGoToProfile;

  @NonNull
  public final ImageView ivBackButton;

  @NonNull
  public final CircleImageView ivUserProfile;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final RecyclerView rvExperienceList;

  @Bindable
  protected JobSeeker mJobSeeker;

  protected FragmentSeekerExperienceListBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button btnAddExperience, Button btnGoToProfile, ImageView ivBackButton,
      CircleImageView ivUserProfile, RelativeLayout relativeLayout, RecyclerView rvExperienceList) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnAddExperience = btnAddExperience;
    this.btnGoToProfile = btnGoToProfile;
    this.ivBackButton = ivBackButton;
    this.ivUserProfile = ivUserProfile;
    this.relativeLayout = relativeLayout;
    this.rvExperienceList = rvExperienceList;
  }

  public abstract void setJobSeeker(@Nullable JobSeeker jobSeeker);

  @Nullable
  public JobSeeker getJobSeeker() {
    return mJobSeeker;
  }

  @NonNull
  public static FragmentSeekerExperienceListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_seeker_experience_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSeekerExperienceListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentSeekerExperienceListBinding>inflateInternal(inflater, R.layout.fragment_seeker_experience_list, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentSeekerExperienceListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_seeker_experience_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSeekerExperienceListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentSeekerExperienceListBinding>inflateInternal(inflater, R.layout.fragment_seeker_experience_list, null, false, component);
  }

  public static FragmentSeekerExperienceListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentSeekerExperienceListBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentSeekerExperienceListBinding)bind(component, view, R.layout.fragment_seeker_experience_list);
  }
}
