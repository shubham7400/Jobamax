// Generated by data binding compiler. Do not edit!
package com.findajob.jobamax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.findajob.jobamax.R;
import com.findajob.jobamax.recruiter.profile.subscription.model.Subscription;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemSubscriptionDetailsBinding extends ViewDataBinding {
  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final CardView cvContainer;

  @NonNull
  public final AppCompatTextView desc;

  @NonNull
  public final AppCompatTextView name;

  @NonNull
  public final AppCompatTextView offerHeader;

  @NonNull
  public final AppCompatTextView price;

  @NonNull
  public final RecyclerView rvOffer;

  @Bindable
  protected CharSequence mOffers;

  @Bindable
  protected CharSequence mSubscriptionPrice;

  @Bindable
  protected CharSequence mButtonLabel;

  @Bindable
  protected Subscription mItem;

  protected ItemSubscriptionDetailsBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button btnSubmit, CardView cvContainer, AppCompatTextView desc,
      AppCompatTextView name, AppCompatTextView offerHeader, AppCompatTextView price,
      RecyclerView rvOffer) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnSubmit = btnSubmit;
    this.cvContainer = cvContainer;
    this.desc = desc;
    this.name = name;
    this.offerHeader = offerHeader;
    this.price = price;
    this.rvOffer = rvOffer;
  }

  public abstract void setOffers(@Nullable CharSequence offers);

  @Nullable
  public CharSequence getOffers() {
    return mOffers;
  }

  public abstract void setSubscriptionPrice(@Nullable CharSequence subscriptionPrice);

  @Nullable
  public CharSequence getSubscriptionPrice() {
    return mSubscriptionPrice;
  }

  public abstract void setButtonLabel(@Nullable CharSequence buttonLabel);

  @Nullable
  public CharSequence getButtonLabel() {
    return mButtonLabel;
  }

  public abstract void setItem(@Nullable Subscription item);

  @Nullable
  public Subscription getItem() {
    return mItem;
  }

  @NonNull
  public static ItemSubscriptionDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_subscription_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemSubscriptionDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemSubscriptionDetailsBinding>inflateInternal(inflater, R.layout.item_subscription_details, root, attachToRoot, component);
  }

  @NonNull
  public static ItemSubscriptionDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_subscription_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemSubscriptionDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemSubscriptionDetailsBinding>inflateInternal(inflater, R.layout.item_subscription_details, null, false, component);
  }

  public static ItemSubscriptionDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemSubscriptionDetailsBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ItemSubscriptionDetailsBinding)bind(component, view, R.layout.item_subscription_details);
  }
}
