// Generated by view binder compiler. Do not edit!
package com.findajob.jobamax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.findajob.jobamax.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationCheckJobOfferBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView bigIcon;

  @NonNull
  public final TextView contentTitle;

  @NonNull
  public final TextView noButton;

  @NonNull
  public final RelativeLayout notificationMain;

  @NonNull
  public final TextView yesButton;

  private NotificationCheckJobOfferBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView bigIcon, @NonNull TextView contentTitle, @NonNull TextView noButton,
      @NonNull RelativeLayout notificationMain, @NonNull TextView yesButton) {
    this.rootView = rootView;
    this.bigIcon = bigIcon;
    this.contentTitle = contentTitle;
    this.noButton = noButton;
    this.notificationMain = notificationMain;
    this.yesButton = yesButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationCheckJobOfferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationCheckJobOfferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_check_job_offer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationCheckJobOfferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.big_icon;
      ImageView bigIcon = ViewBindings.findChildViewById(rootView, id);
      if (bigIcon == null) {
        break missingId;
      }

      id = R.id.content_title;
      TextView contentTitle = ViewBindings.findChildViewById(rootView, id);
      if (contentTitle == null) {
        break missingId;
      }

      id = R.id.noButton;
      TextView noButton = ViewBindings.findChildViewById(rootView, id);
      if (noButton == null) {
        break missingId;
      }

      id = R.id.notification_main;
      RelativeLayout notificationMain = ViewBindings.findChildViewById(rootView, id);
      if (notificationMain == null) {
        break missingId;
      }

      id = R.id.yesButton;
      TextView yesButton = ViewBindings.findChildViewById(rootView, id);
      if (yesButton == null) {
        break missingId;
      }

      return new NotificationCheckJobOfferBinding((RelativeLayout) rootView, bigIcon, contentTitle,
          noButton, notificationMain, yesButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
