// Generated by data binding compiler. Do not edit!
package com.findajob.jobamax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.findajob.jobamax.R;
import com.findajob.jobamax.recruiter.profile.subscription.RecruiterSubscriptionInterface;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class TabItemSubscriptionBinding extends ViewDataBinding {
  @NonNull
  public final Button btnBuyNow;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvSubscriptionDescription;

  @NonNull
  public final TextView tvSubscriptionTitle;

  @Bindable
  protected RecruiterSubscriptionInterface mHandler;

  protected TabItemSubscriptionBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnBuyNow, TextView tvPrice, TextView tvSubscriptionDescription,
      TextView tvSubscriptionTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnBuyNow = btnBuyNow;
    this.tvPrice = tvPrice;
    this.tvSubscriptionDescription = tvSubscriptionDescription;
    this.tvSubscriptionTitle = tvSubscriptionTitle;
  }

  public abstract void setHandler(@Nullable RecruiterSubscriptionInterface handler);

  @Nullable
  public RecruiterSubscriptionInterface getHandler() {
    return mHandler;
  }

  @NonNull
  public static TabItemSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tab_item_subscription, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TabItemSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TabItemSubscriptionBinding>inflateInternal(inflater, R.layout.tab_item_subscription, root, attachToRoot, component);
  }

  @NonNull
  public static TabItemSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tab_item_subscription, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TabItemSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TabItemSubscriptionBinding>inflateInternal(inflater, R.layout.tab_item_subscription, null, false, component);
  }

  public static TabItemSubscriptionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TabItemSubscriptionBinding bind(@NonNull View view, @Nullable Object component) {
    return (TabItemSubscriptionBinding)bind(component, view, R.layout.tab_item_subscription);
  }
}
