// Generated by data binding compiler. Do not edit!
package com.jobamax.appjobamax.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.jobamax.appjobamax.R;
import com.jobamax.appjobamax.login.RegisterInterface;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentRegisterBinding extends ViewDataBinding {
  @NonNull
  public final EditText etConfirmPasswordField;

  @NonNull
  public final EditText etEmailField;

  @NonNull
  public final EditText etPasswordField;

  @NonNull
  public final ImageView ivBackButton;

  @NonNull
  public final ImageView ivShowConfirmPasswordButton;

  @NonNull
  public final ImageView ivShowPasswordButton;

  @NonNull
  public final ImageView jobamaxImage;

  @NonNull
  public final ImageView loginImage;

  @NonNull
  public final TextView tvLogin;

  @Bindable
  protected RegisterInterface mHandler;

  protected FragmentRegisterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      EditText etConfirmPasswordField, EditText etEmailField, EditText etPasswordField,
      ImageView ivBackButton, ImageView ivShowConfirmPasswordButton, ImageView ivShowPasswordButton,
      ImageView jobamaxImage, ImageView loginImage, TextView tvLogin) {
    super(_bindingComponent, _root, _localFieldCount);
    this.etConfirmPasswordField = etConfirmPasswordField;
    this.etEmailField = etEmailField;
    this.etPasswordField = etPasswordField;
    this.ivBackButton = ivBackButton;
    this.ivShowConfirmPasswordButton = ivShowConfirmPasswordButton;
    this.ivShowPasswordButton = ivShowPasswordButton;
    this.jobamaxImage = jobamaxImage;
    this.loginImage = loginImage;
    this.tvLogin = tvLogin;
  }

  public abstract void setHandler(@Nullable RegisterInterface handler);

  @Nullable
  public RegisterInterface getHandler() {
    return mHandler;
  }

  @NonNull
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_register, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRegisterBinding>inflateInternal(inflater, R.layout.fragment_register, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_register, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRegisterBinding>inflateInternal(inflater, R.layout.fragment_register, null, false, component);
  }

  public static FragmentRegisterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRegisterBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentRegisterBinding)bind(component, view, R.layout.fragment_register);
  }
}
